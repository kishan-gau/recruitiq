name: Frontend CI/CD

on:
  push:
    branches: [main, develop]
    paths:
      - 'recruitiq/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'recruitiq/**'

jobs:
  test:
    name: Test Frontend
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: recruitiq/package-lock.json
      
      - name: Install dependencies
        working-directory: recruitiq
        run: npm ci
      
      - name: Run unit tests
        working-directory: recruitiq
        run: npm test -- --run
      
      - name: Run E2E tests
        working-directory: recruitiq
        run: npm run test:e2e || echo "E2E tests not configured"
        continue-on-error: true
      
      - name: Check code coverage
        working-directory: recruitiq
        run: npm run test:coverage || true
      
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          directory: recruitiq/coverage
          flags: frontend
  
  lint:
    name: Lint Frontend
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: recruitiq/package-lock.json
      
      - name: Install dependencies
        working-directory: recruitiq
        run: npm ci
      
      - name: Run linter
        working-directory: recruitiq
        run: npm run lint || echo "No lint script found"
      
      - name: Check formatting
        working-directory: recruitiq
        run: npm run format:check || echo "No format check script"
        continue-on-error: true
  
  build:
    name: Build Frontend
    runs-on: ubuntu-latest
    needs: [test, lint]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: recruitiq/package-lock.json
      
      - name: Install dependencies
        working-directory: recruitiq
        run: npm ci
      
      - name: Create production env file
        working-directory: recruitiq
        run: |
          cat > .env.production << EOF
          VITE_API_URL=${{ secrets.VITE_API_URL }}
          VITE_APP_NAME=RecruitIQ
          VITE_APP_VERSION=${{ github.sha }}
          EOF
      
      - name: Build application
        working-directory: recruitiq
        run: npm run build
        env:
          NODE_ENV: production
      
      - name: Verify build
        working-directory: recruitiq
        run: |
          test -d dist
          test -f dist/index.html
          echo "âœ… Build successful"
      
      - name: Analyze bundle size
        working-directory: recruitiq
        run: |
          npm run build -- --analyze || true
          du -sh dist/
          echo "Bundle size:"
          du -sh dist/assets/*.js
        continue-on-error: true
      
      - name: Upload build artifact
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: recruitiq/dist
          retention-days: 30
      
      - name: Upload to S3 (if deploying)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: echo "Ready for S3/CDN deployment"
        # Uncomment when ready to deploy:
        # - name: Deploy to S3
        #   uses: jakejarvis/s3-sync-action@master
        #   with:
        #     args: --delete
        #   env:
        #     AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        #     SOURCE_DIR: 'recruitiq/dist'
  
  lighthouse:
    name: Lighthouse Performance Audit
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli
          echo "Lighthouse audit would run here"
        continue-on-error: true
