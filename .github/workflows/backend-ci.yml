name: Backend CI/CD

on:
  push:
    branches: [main, develop]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'backend/**'

jobs:
  test:
    name: Test Backend
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: recruitiq_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: testpassword
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      
      - name: Install dependencies
        working-directory: backend
        run: npm ci
      
      - name: Create .env.test file
        working-directory: backend
        run: |
          cat > .env.test << EOF
          NODE_ENV=test
          PORT=4000
          DATABASE_URL=postgresql://postgres:testpassword@localhost:5432/recruitiq_test
          JWT_SECRET=${{ secrets.JWT_SECRET_TEST }}
          JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET_TEST }}
          EOF
      
      - name: Run database migrations
        working-directory: backend
        run: npm run migrate
        env:
          DATABASE_URL: postgresql://postgres:testpassword@localhost:5432/recruitiq_test
      
      - name: Run tests
        working-directory: backend
        run: npm test
        env:
          DATABASE_URL: postgresql://postgres:testpassword@localhost:5432/recruitiq_test
          JWT_SECRET: test_jwt_secret_min_32_characters_long
          JWT_REFRESH_SECRET: test_refresh_secret_min_32_chars
      
      - name: Check code coverage
        working-directory: backend
        run: npm run test:coverage || true
      
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          directory: backend/coverage
          flags: backend
  
  lint:
    name: Lint Backend
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      
      - name: Install dependencies
        working-directory: backend
        run: npm ci
      
      - name: Run linter
        working-directory: backend
        run: npm run lint || echo "No lint script found"
  
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Run security audit
        working-directory: backend
        run: npm audit --audit-level=moderate
        continue-on-error: true
      
      - name: Check for vulnerabilities
        working-directory: backend
        run: |
          npm audit --json > audit-results.json || true
          cat audit-results.json
  
  build:
    name: Build Backend
    runs-on: ubuntu-latest
    needs: [test, lint]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      
      - name: Install dependencies
        working-directory: backend
        run: npm ci --production
      
      - name: Verify production build
        working-directory: backend
        run: |
          echo "Checking for required files..."
          test -f src/server.js
          test -f package.json
          echo "âœ… Build verified"
      
      - name: Create artifact
        if: github.ref == 'refs/heads/main'
        run: |
          cd backend
          tar -czf backend-${{ github.sha }}.tar.gz \
            src/ \
            package.json \
            package-lock.json
      
      - name: Upload artifact
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v3
        with:
          name: backend-build
          path: backend/backend-${{ github.sha }}.tar.gz
          retention-days: 30
